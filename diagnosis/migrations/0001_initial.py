# Generated by Django 4.2.7 on 2025-07-16 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, default='', max_length=100)),
                ('description', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Crop',
                'verbose_name_plural': 'Crops',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DiagnosisRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='diagnosis_images/')),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('is_healthy', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('severity', models.CharField(blank=True, choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], max_length=20, null=True)),
                ('notes', models.TextField(blank=True, default='')),
                ('farmer_notes', models.TextField(blank=True, default='', help_text='Additional notes from the farmer')),
                ('location', models.CharField(blank=True, default='', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='diagnosis.crop')),
            ],
            options={
                'verbose_name': 'Diagnosis Request',
                'verbose_name_plural': 'Diagnosis Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, default='', max_length=100)),
                ('description', models.TextField(default='No description available')),
                ('symptoms', models.TextField(default='No symptoms information available')),
                ('prevention', models.TextField(default='No prevention information available')),
                ('treatment', models.TextField(default='No treatment information available')),
                ('severity_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='MEDIUM', max_length=20)),
                ('image', models.ImageField(blank=True, upload_to='disease_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('affected_crops', models.ManyToManyField(related_name='diseases', to='diagnosis.crop')),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentRecommendation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('diagnosis', models.TextField(default='No diagnosis available')),
                ('description', models.TextField(default='No description available')),
                ('treatment_steps', models.TextField(default='No treatment steps available')),
                ('products_needed', models.TextField(blank=True, default='')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('timeframe', models.CharField(blank=True, default='', max_length=100)),
                ('urgency_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='diagnosis.diagnosisrequest')),
                ('disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='diagnosis.disease')),
            ],
            options={
                'verbose_name': 'Treatment Recommendation',
                'verbose_name_plural': 'Treatment Recommendations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackRating',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, 'Very Bad'), (2, 'Bad'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], default=3)),
                ('comments', models.TextField(blank=True, default='')),
                ('is_diagnosis_accurate', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('actual_disease', models.ForeignKey(blank=True, help_text='What was the actual disease if diagnosis was wrong?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='diagnosis.disease')),
                ('diagnosis_request', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='diagnosis.diagnosisrequest')),
            ],
            options={
                'verbose_name': 'Feedback Rating',
                'verbose_name_plural': 'Feedback Ratings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FarmerDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('disease_details', models.JSONField()),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DiseasePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='prediction_images/')),
                ('predicted_class', models.CharField(max_length=100)),
                ('confidence', models.FloatField()),
                ('disease_info', models.JSONField()),
                ('recommendations', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('severity', models.CharField(max_length=20)),
                ('diagnosis_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='diagnosis.diagnosisrequest')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='diagnosisrequest',
            name='predicted_disease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='diagnosis.disease'),
        ),
        migrations.AddField(
            model_name='diagnosisrequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosis_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='diagnosisrequest',
            index=models.Index(fields=['user', 'status'], name='diagnosis_d_user_id_d41ead_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosisrequest',
            index=models.Index(fields=['created_at'], name='diagnosis_d_created_5e1bdb_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosisrequest',
            index=models.Index(fields=['status'], name='diagnosis_d_status_99d74b_idx'),
        ),
    ]
